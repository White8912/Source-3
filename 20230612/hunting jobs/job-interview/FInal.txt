1. ### Tell me about yourself and why you want to become software engineer.

Before applying for this software engineer role with your company, I spent time reading the job description and the person specification. 
I wanted to make sure I was both properly qualified for the role, and that I also had the appropriate experience and skills to help drive the company forward. 
I am hard working, driven, technically astute and someone who will work closely with people within your organization to achieve your commercial 
and inancial objectives.
 I want to be a software engineer simply because it is a role that I am extremely passionate about, and also one I get immense job satisfaction from, 
especially hen I get to see first-hand the positive contribution my work makes to the organization I am working for. If you hire me as your software engineer, 
I will not only work hard to deliver consistent positive results, but I will also use my developing,
researching, analytical nd technical skills to help the company continually thrive and develop.

2. ### Why do you want to work for our company as a software engineer? 
For me, the company I work for is very important. I believe that, to be able to perform your duties and responsibilities as a software engineer competently, 
you need the support of your employer, and you also need to work with like-minded people who are
all working towards a common goal. During my research into your organization, it soon became apparent that you are not only a leader within the industry, 
but you also continually look for ways to grow and develop. You also clearly hire some of the best people available, and this means
 I’ll be working with other professionals who all genuinely care about the work they produce. I am someone who is ambitious; I don’t like to sit back and
just do the bare minimum, and if you hire me, I feel confident you will be impressed with my work values, ethics and high standards.

3. ### How would you deal with a member of your team who disagreed with the work you carried out as a software engineer?
I have a lot of experience as a Software Engineer, and I feel the work I produce is to a very high standard. Having said that,
I am also aware that when I do work as part of a team, it is important to listen to other people as they may have valid contributions to make.
On that basis, I would certainly be open to listening to why they felt the work I was carrying out could be altered or improved.
At the end of the day, we are all working for the same organization, and if it means changing the way I do things for the benefit of the team goal,
 I will certainly do that

4. ### In your opinion, what are the skills and qualities needed to be a software engineer?
Whilst there are numerous skills and qualities needed, there are 9 in particular that are essential to becoming an effective
Software Engineer. In no particular order, these are TECHNICAL COMPETENCE, COMMUNICATION and INTERPERSONAL SKILLS 
whilst dealing with clients and internal team members, EXCEPTIONAL ORGANIZATIONAL AND PLANNING capabilities, a level of COMMERCIAL AWARENESS, and also
an understanding of how important it is to MAINTAIN COMPETENCE in your role through professional development. 
You also need an ability to EXPLAIN TECHNICAL INFORMATION in a simple and concise manner so people understand it, 
an AWARENES OF CURRENT ISSUES impacting the industry you are working in, and also strong ANALYTICAL and ATTENTION TO DETAIL skills.

5. ### tell me a time when you worked as part of a team to solve a complex task?
Here we go. “I was part of a multi-agency project building a software application for an important client. Towards the end of the project, 
we encountered a number of bugs and problems with the software application, and time was against us to get everything
fixed before the official handover date. I felt it was my responsibility to come up with a solution to get the issues fixed. 
I stayed behind late that evening with two other experienced team members to come up with a plan that would ensure the bugs were not only fully rectified,
but that a support system was in place to respond to any future issues if they were to arise, post-handover. 
We started off by CREATING A LIST of all bugs and issues. We then attempted to RECREATE EACH BUG so that we could assess what was causing the issue.
We managed to recreate all of the bugs and it was then my task to CREATE A TIMESCALE for rectifying and testing each issue. 
Once we had a PLAN IN PLACE, we could then allocate tasks to team members based on their area of technical competence the following morning.
By creating a plan of action, and by working closely together as a team, we were able to tap into the combined team expertise and
 competence to not only provide a time-sensitive solution to the problem, but to also implement a support mechanism for our client.

6. ### tell me how you would handle the stress and pressure of being a software engineer?
I think as a software engineer, you have  to realise that stress and pressure is all part of the role. And in actual fact, I feel
I tend to perform better when I am up against it and there is a definitive timeframe to work towards. 
I manage stress in three ways. First and foremost, I ensure I plan my work well in advance, 
so I know what I need to do, and by what deadline. By having a plan in place, it means I work more efficiently and I can decide which tasks need my attention
first. The second way I handle stress and pressure, is to make sure I work closely with other members of the team, 
and that communication is a constant theme throughout the day. Finally, I handle stress and pressure by making sure I dedicate some time each week to keeping
up-to-date with developments from within the industry. This gives me the confidence in my role as a Software Engineer, 
and it also eliminates any unwelcome surprises when updates do come out or changes within the industry are released.

7. ### How to collaborate with designers as a frontend developer. (Example question and answer)

The gap between designers and developers often slows workflows and makes it harder to bring products to market. Without strong collaboration between your design and development product teams, you will likely find that your company has to correct a lot of mistakes before you can finalize a product and release it to consumers.
You don’t have to tolerate the designer-developer gap.
[Creating a design system](https://www.uxpin.com/docs/design-systems/design-systems/#creating-a-design-system) that uses the same components for designers and developers is the most important thing you can do to bridge the gap between teams. Your design system should provide everything that your people need during the designing and coding phases, including the product’s approved:
- Typography
- Colors
- Icons
- Photographs
- GIFs
- Sounds
- Interactive elements
You can improve every step of production by using the same design system for your designers and developers so that they don’t waste time on deciding which font or color to use, and how to code this button and that form. Traditionally, companies struggle with this approach because they take an image-based approach to building products and you need to put a lot of effort to maintain the design system. After the design team finishes its work, developers need to find ways to make components functional. A code-based approach eliminates the gap by giving designers and developers access to a real single source of truth that can be reused anytime.
*[See examples of design systems.](https://adele.uxpin.com/)*
**Improve communications between web designers and front-end developers**
Your designer and development teams need easy ways to communicate with each other. Not too long ago, you had limited ways to improve communication between teams. You could have them share a workspace or add everyone to a social media group.
Today, you have ample tools to improve communication and collaboration, even when your team members work remotely. Some of your best options include applications like:
- [Slack](https://slack.com/)
- [Trello](https://trello.com/)
- [Google Workspace](https://workspace.google.com/)
When you need a replacement for face-to-face conversations, you can use video conferencing apps like:
- [Zoom](https://zoom.us/)
- [GoToMeeting](https://www.gotomeeting.com/)
- [Microsoft Teams](https://www.microsoft.com/)
[**Invite designers and developers to product design brainstorming sessions** ](https://www.notion.so/Invite-designers-and-developers-to-product-design-brainstorming-sessions-f95006051e7b40da895d1ebba11e3071)
Teammates get left out of critical brainstorm sessions far too often. The project manager might think to invite the development team’s leader for insight into the challenges of adding certain features to a product.
Get more designers and developers involved in brainstorming sessions to build camaraderie, share ideas, and discover innovative concepts that you might have missed without everyone’s participation.

8. ### What's the best way for front and back end web developers to work simultaneously?
Agree on the interfacing API.

Front end and backend developers need to agree on the data and format being passed back and forth between the web application and backend application.

Knowing ahead of time of what data and data format allows both front and backend developers to develop independently. Front end developers can use mockup data with the same format for development while backend developers are preparing the APIs.

In real scenarios, requirements change and update from time to time. Therefore, it is also important to document down the agreed APIs and data format and make it accessible by all parties. Keep them updated from time to time. Whenever there is change, always notify both sides so that they can make necessary changes.

From my own work experience, issues always happen when front and backend developers have different expectations. Front end devs expect data to be properly formatted at backend, where as backend devs prefer to pass the raw data over to front end devs and let them format the data to be displayed according to needs.

The way I see it, the web front end and backend are tightly integrated, which means the backend is always serving for this particular web app, I would prefer backend devs to provide formatted data to frontend. Each request at the web app should correspond to an API endpoint at the backend.

On the other hand, if the backend is serving multiple webs, then it is reasonable to provide the raw data and let the client web decides how to format the data and use them.

9. ### Do you have project or most challenging tasks you can explain?
My challenging project is Chat project what I have done in Biztree company.
Main functions are very similar to slack, private, group messages, files, reaction, reply, etc.
To implement chat functions are not very difficult but the main point is to make the system capable of heavy load.
They aim at the system of 100k people.
After implementing main functions, we tested the heavy load using k6.io. But the result was unsatisfactory. The system is not able to take heavy load of many users at the same time. We came up with AWS services like VPC, load balancer and also did setting for load distribution over servers of different areas but the result was not   satisfactory as well. So we optimized the algorithm of handling socket connections and used Centrifugo, thrid party scalable real-time messaging server.
After that, it began to work properly.
That is it.

10. ### What Are You Looking for in Your Next Job?

I am excited by the opportunity to work with an innovative, successful company such as your own. I look forward to utilizing the experience I have in technology to help streamline a company’s products for even more successful implementation.

11. ### what is your favourite patter in application development?
What I would look at is the Design Patterns that are widely used.


* Abstract Factory- Encapsulating a group of individual factories, having a common functionality. Generally used by most applications,to create a group of objects with common characteristics.
* Prototype- Instead of creating a new object of every sub class that extends the Abstract factory class, here we invoke the clone method of the Prototype interface, that gets us the clone instances of the implementing classes. This avoids creation of new objects.
* Singleton- When we need only one instance of a class to implement the functions. A controller class is the best example, any given point of time, we need just one instance of it, that would manage the flow, delegate the messages.
* Facade- Provides a simple interface to a complex body of code, like a class library. Advantage of using Facade is that there is a common point of contact for clients, which need to access the functionality of a class library. For eg a Coffee Machine needs to perform a series of functions to make coffee, getCoffeeBeans, getMilk, getWater, mixBeansMilkWater, having all these methods in a common facade which encapsulates their implementation, makes it easier for the client.
* Proxy- Again used by most applications where you have a class that is an interface to another class. So let's say you have a class that implements the connection to the database, the proxy here acts as an interface to that class. When the client makes a request, it will be to the proxy, which in turn makes a call to the actual class that implements the connection.
* Iterator- Used in most Collection classes, to loop through the list, and get the elements.

For example, in frontend development, I make the project scalable and always make all possible reusable components as many as possible.

12. ### List your strengths.
My strengths are coding in javascript and working as part of a team. I've been writing code in javascript for three years and gained a lot of experience writing clean code as a developer for Awesome Corp. I also worked in various roles as part of a team there, gaining progressively more responsibility as I was promoted through the team. I excel at communication and conflict resolution which makes me an excellent team leader.

13. ### How do you respond to the team member's critisizm on your code and cite an example?
In my last positions, there were some times when I got critisizm on my code normally just after joining new team.
I do not take it personally and I take it thankfully so it will make me improve and adopt team culture quickly.
I normally take a look at the code again which was commented badly and try to find another approach for that and suggest that to the team members.

For example, in my last position Advinow and I was working on complicated busines logic part and I received raw data from api and should handle them according to the 
business finance logic. As easy solution, I used lodash package for data handling functions but it was commented badly by team members as it affects badly on 
performance. So I kindly accepted the comment and found a algorithm logic with plain vanilla javascript functions.

14. ### How do you stay current with the latest technology? In your career what shifts have you seen in the technology stacks and how have you adapted to those shifts?
I am passionate about new technologies and updates. I normally join the technology community like telegram, discord, slack etc and get latest news and updates for web development.
Typicall one is my shift to JS frameworks.
I started my developer career as PHP developer but around 2013 I got very interested in JS frameworks like Angular , React, Node and decided to learn them for future.
From many communities, I got interested and realized that SPA is the more comfortable and better way for web development.
Also I got that functional programming in react will be better for future performance so I concentrated on that.
That is it.

15. ### Explain your agile environment in your previous Position.
In my last position, Advinow I worked in agile work environment, incremental processes.
We did the daily meeting every day that involve all of the contributors. We gave great importantace to team collaboration and task management.
We use Jira for task management and in the beginning of each sprints period, we designed and plan everything first in detail together with timeline and weight and work very closely. 
For every sprint, we did "design-develop-test". All the works we did is reviewed and tested fully and quickly. Those things makes us to adapt quickly to the team culture and development. That is it.

16. ### How long were your sprints in scrum?
In Scrum, a sprint is a time-boxed event of one to four weeks in which your Scrum team focuses only on a sprint goal. The goal is typically a product increment or iteration — often an updated, improved version of your product or software.
It is between 1 to 4 weeks so you can choose around those period per sprint.
The stages of a Scrum sprint (in plain English)
A sprint project, Agile or Scrum, goes through many stages from pre-planning, planning, to review. In the sections below, we cover what a Scrum team needs to do in each stage.

* Pre-planning
Establish a product roadmap (high-level goals and timeline for product functionality).
Compile and prioritize items in the product backlog (list of all necessary features for the completed product).
* Planning
Hold a sprint planning meeting where you create the sprint backlog (all the user stories, bugs, or features you want to target in the sprint).
Decide on a greater sprint goal (essentially how the items in your sprint backlog should change your current product version).
* Working
The Scrum team follows the sprint backlog and works to create a complete increment.
Use a 15 minute daily Scrum meeting to stay on track and keep up the progress.
* Review and testing
Hold a sprint review meeting with stakeholders, the product owner, and all team members to test if the product increment holds up. If it does, consider it done, and if they have complaints, add them to the product backlog to tackle in another sprint.
* Looking back and adapting
Hold a sprint retrospective where you look back at the sprint, consider what went well, where you can improve, and commit to addressing some issues in the next sprint.
Also, consider the direction of the project, and whether changing priorities need to be reflected in the product backlog.
